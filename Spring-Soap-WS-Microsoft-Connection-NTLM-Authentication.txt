1- put wsdl in resourse/wsdl/GetQuantity.xml
2- in pom.xml add following plugin: 
		<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.14.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaLanguage>WSDL</schemaLanguage>
					<generatePackage>com.example.wsdl</generatePackage>
					<schemaDirectory>src/main/resources/wsdl</schemaDirectory>
					<schemaIncludes>
						<include>*.xml</include>
					</schemaIncludes>
					<removeOldOutput>true</removeOldOutput>
				</configuration>
			</plugin>
please note generated package
3- After running plugin classes generated in targer folder and they are ready to cook :) 

// ----------------------- config file in spring boot environment ---------------------

import org.apache.http.auth.NTCredentials;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.oxm.jaxb.Jaxb2Marshaller;
import org.springframework.ws.client.core.WebServiceTemplate;
import org.springframework.ws.transport.WebServiceMessageSender;
import org.springframework.ws.transport.http.HttpComponentsMessageSender;

@Configuration
public class MyConfig {
    final String username = "";
    final String pass = "";
    final static String WS_URL = "";
    final String domain = "";

    @Bean
    public Jaxb2Marshaller marshaller() {
        Jaxb2Marshaller marshaller = new Jaxb2Marshaller();
        marshaller.setPackagesToScan("com.example.dynamicnavconnection.wsdl");
        return marshaller;
    }

    @Bean
    public HttpComponentsMessageSender httpComponentsMessageSender() {
        HttpComponentsMessageSender httpComponentsMessageSender = new HttpComponentsMessageSender();
        NTCredentials credentials = new NTCredentials(username, String.valueOf(pass), null, domain);
        httpComponentsMessageSender.setCredentials(credentials);
        return httpComponentsMessageSender;
    }

    @Bean
    public WebServiceTemplate webServiceTemplate(Jaxb2Marshaller marshaller, WebServiceMessageSender messageSender) {
        WebServiceTemplate webServiceTemplate = new WebServiceTemplate(marshaller, marshaller);
        webServiceTemplate.setMessageSender(messageSender);
        return webServiceTemplate;
    }
}


// ------------------------ my service --------------------------------
@Service
public class MyService {

    private static final Logger LOG = LoggerFactory.getLogger(MyService.class);
    final String WS_URL = "";

    @Autowired
    private WebServiceTemplate webServiceTemplate;

    public String getQuantity(String param1, String param2){
        GetQuantity request = new GetQuantity();
        request.setParam1(param1);
        request.setParam2(param2);
     
        GetQuantityResult quantityResult = (GetQuantityResult) webServiceTemplate.marshalSendAndReceive(WS_URL, request);
        String value = quantityResult.getReturnValue();
        LOG.info("result : {}" , value);
        return value;
    }
}

// ---------------------------- MyCallService method -------------------------------
public void callService(){
        String quantity1 =myService.getQuantity("123", "");// expected result : 0
        LOG.info("quantity1: {}", quantity1);
        String quantity2 = myService.getQuantity("", "123");//expected result : 1
        LOG.info("quantity2: {}", quantity2);
}

// ---------------------------------- it is the end of this story :) -----------------------------



